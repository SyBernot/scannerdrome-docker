#!/usr/bin/perl
use strict;
my $vid=shift;
unless ($vid){
  print "you must provide a watch string from youtube!\n";
  exit 1;
}
my $cmd ="/usr/local/bin/youtube-dl -x --audio-format mp3 --audio-quality 256k --embed-thumbnail --add-metadata https://www.youtube.com/watch?v=$vid";

my  ($status, $output) = executeCommand($cmd);
print $output;
$output=~/\[ffmpeg\]\s+Destination:\s+(.*.mp3)/m;
my $file =$1;
chomp $file;

print "FILE: $file\n";
#set the genre 
$cmd="/usr/bin/eyeD3 -G 186 $file";
($status, $output) = executeCommand($cmd);
print $output;
#fixup date
#eyed3.core:WARNING: Invalid date: 20191222
$output =~/.*Invalid date:\s+(\d\d\d\d)(\d\d)(\d\d)/;
my $year  = $1;
my $month = $2;
my $day   = $3;
$cmd="/usr/bin/eyeD3   --release-date ${year}-${month}-${day} $file";
($status, $output) = executeCommand($cmd);
print $output;
exit 0;

sub executeCommand {
###############################################################################
# Usage     : executeCommand (command)
# Purpose   : executes a command and returns outoput and status
# Returns   : exec status, std out
# Parameters: command
# Comments  :  my ($status, $output) = executeCommand($command)
#              returns 0,null or 1,errorstring
################################################################################
    my $command = join ' ', @_;
    reverse ($_ = qx{$command 2>&1}, $? >> 8);
}
